/*
 * This file is generated by jOOQ.
 */
package org.opm.busybeaver.jooq.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.opm.busybeaver.jooq.tables.Tasks;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TasksRecord extends UpdatableRecordImpl<TasksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tasks.task_id</code>.
     */
    public void setTaskId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tasks.task_id</code>.
     */
    public Integer getTaskId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.tasks.sprint_id</code>.
     */
    public void setSprintId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tasks.sprint_id</code>.
     */
    public Integer getSprintId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.tasks.assigned_to</code>.
     */
    public void setAssignedTo(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tasks.assigned_to</code>.
     */
    public Integer getAssignedTo() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.tasks.column_id</code>.
     */
    public void setColumnId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tasks.column_id</code>.
     */
    public Integer getColumnId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.tasks.project_id</code>.
     */
    public void setProjectId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.tasks.project_id</code>.
     */
    public Integer getProjectId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.tasks.priority</code>.
     */
    public void setPriority(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.tasks.priority</code>.
     */
    public String getPriority() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.tasks.due_date</code>.
     */
    public void setDueDate(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.tasks.due_date</code>.
     */
    public LocalDate getDueDate() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>public.tasks.title</code>.
     */
    public void setTitle(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.tasks.title</code>.
     */
    public String getTitle() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.tasks.description</code>.
     */
    public void setDescription(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.tasks.description</code>.
     */
    public String getDescription() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.tasks.custom_fields</code>.
     */
    public void setCustomFields(JSONB value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.tasks.custom_fields</code>.
     */
    public JSONB getCustomFields() {
        return (JSONB) get(9);
    }

    /**
     * Setter for <code>public.tasks.task_created</code>.
     */
    public void setTaskCreated(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.tasks.task_created</code>.
     */
    public LocalDateTime getTaskCreated() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TasksRecord
     */
    public TasksRecord() {
        super(Tasks.TASKS);
    }

    /**
     * Create a detached, initialised TasksRecord
     */
    public TasksRecord(Integer taskId, Integer sprintId, Integer assignedTo, Integer columnId, Integer projectId, String priority, LocalDate dueDate, String title, String description, JSONB customFields, LocalDateTime taskCreated) {
        super(Tasks.TASKS);

        setTaskId(taskId);
        setSprintId(sprintId);
        setAssignedTo(assignedTo);
        setColumnId(columnId);
        setProjectId(projectId);
        setPriority(priority);
        setDueDate(dueDate);
        setTitle(title);
        setDescription(description);
        setCustomFields(customFields);
        setTaskCreated(taskCreated);
        resetChangedOnNotNull();
    }
}
