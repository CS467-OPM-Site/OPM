/*
 * This file is generated by jOOQ.
 */
package org.opm.busybeaver.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.opm.busybeaver.jooq.tables.Comments;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CommentsRecord extends UpdatableRecordImpl<CommentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.comments.comment_id</code>.
     */
    public void setCommentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.comments.comment_id</code>.
     */
    public Integer getCommentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.comments.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.comments.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.comments.task_id</code>.
     */
    public void setTaskId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.comments.task_id</code>.
     */
    public Integer getTaskId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.comments.comment_created</code>.
     */
    public void setCommentCreated(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.comments.comment_created</code>.
     */
    public LocalDateTime getCommentCreated() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.comments.comment_body</code>.
     */
    public void setCommentBody(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.comments.comment_body</code>.
     */
    public String getCommentBody() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentsRecord
     */
    public CommentsRecord() {
        super(Comments.COMMENTS);
    }

    /**
     * Create a detached, initialised CommentsRecord
     */
    public CommentsRecord(Integer commentId, Integer userId, Integer taskId, LocalDateTime commentCreated, String commentBody) {
        super(Comments.COMMENTS);

        setCommentId(commentId);
        setUserId(userId);
        setTaskId(taskId);
        setCommentCreated(commentCreated);
        setCommentBody(commentBody);
        resetChangedOnNotNull();
    }
}
